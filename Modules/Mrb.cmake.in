# Once only!
include_guard(GLOBAL)

cmake_policy(PUSH)
cmake_minimum_required(VERSION 3.18.2 FATAL_ERROR)

if (EXISTS ${CMAKE_SOURCE_DIR}/cetmodules)
  list(PREPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cetmodules/Modules
    ${CMAKE_SOURCE_DIR}/cetmodules/Modules/compat)
else()
  find_package(cetmodules @MRB_MIN_CETMODULES_VERSION@ REQUIRED)
endif()
include(Compatibility)

# Do not attempt to call the official find_package() on in-tree
#  packages.
macro(find_package)
  cmake_policy(PUSH)
  cmake_minimum_required(VERSION 3.14...3.18.2)
  if (${ARGV0}_IN_TREE)
    if (CETMODULES_CMAKE_MODULES_DIRECTORIES_PROJECT_${ARGV0})
      list(TRANSFORM CETMODULES_CMAKE_MODULES_DIRECTORIES_PROJECT_${ARGV0}
        PREPEND "${${ARGV0}_SOURCE_DIR}/" REGEX "^[^/]+" OUTPUT_VARIABLE _fp_tmp)
      list(PREPEND CMAKE_MODULE_PATH "${_fp_tmp}")
      string(TOUPPER "${ARGV0}" _fp_tmp)
      set(${_fp_tmp} TRUE)
      set(${ARGV0}_FOUND TRUE)
      unset(_fp_tmp)
    endif()
  else()
    _find_package(${ARGV})
  endif()
  cmake_policy(POP)
endmacro()

function(mrb_check_subdir_order)
  # Read the order determined by mrbsetenv
  set(prod_setup_file "${CMAKE_BINARY_DIR}/$ENV{MRB_PROJECT}-$ENV{MRB_PROJECT_VERSION}")
  file(READ "${prod_setup_file}" prod_setup)
  string(REPLACE "\n" ";" prod_setup "${prod_setup}")
  list(FILTER prod_setup INCLUDE REGEX "^# >> .* <<$")
  list(TRANSFORM prod_setup REPLACE "^# >> (.*) <<$" "\\1")

  # Now read the current subdirectory order.
  set(subdirs_file "${CMAKE_SOURCE_DIR}/.cmake_add_subdir")
  file(READ "${subdirs_file}" subdirs)
  string(REPLACE "\n" ";" subdirs "${subdirs}")
  list(FILTER subdirs INCLUDE REGEX "^add_subdirectory")
  list(TRANSFORM subdirs REPLACE "^add_subdirectory\\(([^)]+)\\).*$" "\\1")

  # Compare and complain.
  if (NOT "${subdirs}" STREQUAL "${prod_setup}")
    message(FATAL_ERROR "\
Current CMake subdirectory inclusion order is not consistent with current packages \
and their interdependencies.
Please run \"mrb uc\" to regenerate \${MRB_SOURCE}/CMakeLists.txt with \
subdirectories listed for inclusion in the correct order.\
")
  endif()
endfunction()

function(mrb_checkpoint)
  cet_checkpoint_cmp()
  cet_checkpoint_did()
endfunction()

function(mrb_process_checkpoints)
  cet_process_cmp()
  cet_process_did()
endfunction()

mrb_check_subdir_order()

mrb_checkpoint()

cmake_policy(POP)
