#!/usr/bin/env perl
#

# parse and update a product in CMakeLists.txt


# parse and update product_deps

#  ${mrb_bin}/edit_cmake ${pdfile} ${product} ${version}  || exit 1


use File::Basename;
use lib dirname($0);

if( $#ARGV < 3 ) {
    print "\n";
    print "ERROR: unspecified parameters - only have $#ARGV \n";
    print "USAGE: edit_cmake <file> <product> <version> <dryrun:yes|no>\n";
    exit 1;
}

$pdfile = $ARGV[0];
$product = $ARGV[1];
$version = $ARGV[2];
$dryrun = $ARGV[3];

if ( $dryrun eq "yes" ) {
  $pdfilebak = $pdfile;
  print "Dry Run: these changes will be made:\n";
  print "\n";
} else {
  $pdfilebak = $pdfile.".bak";
  print "renaming $pdfile to $pdfilebak\n";
  print "\n";
  rename ($pdfile, $pdfilebak) || die ( "Failed to rename $pdfile" );
  open(POUT, "> $pdfile")  || die ( "Failed to open new $pdfile" );
}



$get_phash="";
$get_quals="";
$get_fragment="";
my $this_prod;
my $oldver;
open(PIN, "< $pdfilebak") or die "Couldn't open $pdfilebak";
while ( $line=<PIN> ) {
  chop $line;
  if ( index($line,"#") == 0 ) {
    print_line ( POUT, $line, $dryrun );
  } elsif ( $line !~ /\w+/ ) {
    print_line ( POUT, $line, $dryrun );
  } else {
    # use the parens to split instead of whitespace which might not exist
    #@words = split(/\(/,$line);
    #print "found $words[0]\n";
    #if( $words[0] =~ m/create_product_variables/  ) {
    if( $line =~  /create_product_variables\s*[(]\s*(\w+)\s+(\w+)\s*[)]/ ) {
       #@word2  = split(/\s+/,$words[1]);
       $this_prod = $1;
       $oldver = $2;
       #print "found create_product_variables $words[0] $words[1] in $line\n";
       #print "found create_product_variables $this_prod $oldver in $line\n";
       if ( $this_prod  eq $product ) {
          $newline = $line;
	  $newline =~ s/$oldver/$version/;
          if ( $dryrun eq "yes" ) {
	    print "old line: $line\n";
	    print "new line: $newline\n";
	  }
          print_line ( POUT, $newline, $dryrun );
       } else {
          print_line ( POUT, $line, $dryrun );
       }
    #} elsif ( $words[0] eq "set(" ) {
    } elsif ( $line =~ /set\s*[(]\s*(\w+)\s+(\w+)\s*[)]/ ) {
       $this_prod = $1;
       $oldver = $2;
       if ( $this_prod eq $product ) {
          print "edit $line - $product to $version\n";
          $newline = $line;
	  $newline =~ s/$oldver/$version/;
          if ( $dryrun eq "yes" ) {
	    print "old line: $line\n";
	    print "new line: $newline\n";
	  }
          print_line ( POUT, $newline, $dryrun );
       } else {
          print_line ( POUT, $line, $dryrun );
       }
    } else {
       print_line ( POUT, $line, $dryrun );
    }
  }
}
close(PIN);


exit 0;

sub print_line {
  my @params = @_;
  my $output = $params[0];
  my $oline = $params[1];
  my $dr = $params[2];
  if ( $dryrun eq "no" ) {
    print $output "$oline\n";
  }
}

