#!/usr/bin/env perl
#

# parse and update product_deps

use File::Basename;
use lib dirname($0);

if( $#ARGV < 3 ) {
    print "\n";
    print "ERROR: unspecified parameters - only have $#ARGV \n";
    print "USAGE: edit_product_deps <file> <product> <version> <dryrun:yes|no>\n";
    exit 1;
}

$pdfile = $ARGV[0];
$product = $ARGV[1];
$version = $ARGV[2];
$dryrun = $ARGV[3];

if ( $dryrun eq "yes" ) {
  $pdfilebak = $pdfile;
  print "DRY RUN: these changes will be made:\n";
} else {
  $pdfilebak = $pdfile.".bak";
  print "INFO: renaming $pdfile to $pdfilebak\n";
  rename ($pdfile, $pdfilebak) || die ( "Failed to rename $pdfile" );
  open(POUT, "> $pdfile")  || die ( "Failed to open new $pdfile" );
}

$get_phash="";
$get_quals="";
$get_fragment="";
open(PIN, "< $pdfilebak") or die "Couldn't open $pdfilebak";
while ($line=<PIN>) {
  chomp $line;
  my $newline = $line;
  if ($newline =~ s&^(\s*parent\s+\Q$product\E\s+)[^#\s]+&${1}${version}& or
      ($get_phash eq "true" and
       $newline =~ s&^(\s*\Q$product\E\s+)[^-\s]\S+&${1}${version}&)) {
  } elsif ($line =~ m&^\s*parent\s+\Q$product\E&) {
    printf "INFO: version information for $product is set by project() in %s/CMakeLists.txt\n",
      dirname(dirname($pdfile));
  } elsif ($line =~ m&^\s*product\b&) {
    $get_phash="true";
  } elsif ($line =~ m&^\s*end_product_list\b&) {
    $get_phash="";
  }
  if ($newline ne $line) {
    if ($dryrun eq "yes") {
      print "  old line: $line\n";
      print "  new line: $newline\n";
    } else {
      $line = $newline;
    }
  }
  print_line(POUT, $line, $dryrun);
}
close(PIN);

exit 0;

sub print_line {
  my @params = @_;
  my $output = $params[0];
  my $oline = $params[1];
  my $dr = $params[2];
  if ( $dryrun eq "no" ) {
    print $output "$oline\n";
  }
}
