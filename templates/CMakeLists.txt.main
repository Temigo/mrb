# Master build script for CMake (automatically generated by "mrb newDev")
cmake_minimum_required (VERSION 3.18.2 FATAL_ERROR)

# Do not attempt to call the official find_package() on in-tree
#  packages.
macro(find_package)
  if (${ARGV0}_IN_TREE)
    if (CETMODULES_CMAKE_MODULES_DIRECTORIES_PROJECT_${ARGV0})
      list(TRANSFORM CETMODULES_CMAKE_MODULES_DIRECTORIES_PROJECT_${ARGV0}
        PREPEND "${${ARGV0}_SOURCE_DIR}/" REGEX "^[^/]+" OUTPUT_VARIABLE _fp_tmp)
      list(PREPEND CMAKE_MODULE_PATH "${_fp_tmp}")
      unset(_fp_tmp)
    endif()
  else()
    _find_package(${ARGV})
  endif()
endmacro()

find_package(mrb 5.00.00 REQUIRED)
include(MrbChecks)

mrb_check_subdir_order()

find_package(cetmodules REQUIRED)
include(Compatibility)

cet_checkpoint_cmp()

project(@mrb_project@ VERSION @mrb_dot_version@ LANGUAGES NONE)

set(CETMODULES_CMAKE_INSTALL_PREFIX_ORIG "${CMAKE_INSTALL_PREFIX}"
  CACHE INTERNAL "Original value of CMAKE_INSTALL_PREFIX (via mrb)")

include(CTest)

# add_subdirectory() and other commands will be added below by "mrb
# gitCheckout" (a.k.a. mrb g) for each package.

########################################################################
# If you add a package by hand (i.e. *not* via mrb gitCheckout), you
# MUST:
#
#   1. Use mrb uc to update this CMakeLists.txt safely.
#
#   2. Source mrbsetenv
#
#   3. Use mrb uc to ensure the order of inclusion of subdirectories is
#      correct.
########################################################################

