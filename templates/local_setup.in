# No magic #!, this script must be sourced!

#
#  Begin boilerplate.
#

# Note: All the following special tricks for $_ must continue
#       relaying the value to the next rule.  Be careful!
# Special trick to nail the value of $_ down in a variety of shells.
echo $_ >& /dev/null
# Special trick for tcsh which is one-off on the command history stack.
: $_
# Special trick to capture the value of $_ in zsh and bash
test $?shell$_ != 1$_ >& /dev/null && \
    dollar_underscore="$_" && \
    dollar_underscore=`expr "${dollar_underscore}" : ".\(.*\)"`
# Special trick to capture the value of $_ in tcsh
test $?shell = 1 && set dollar_underscore=`echo $_`

# Get the shell independence aliases and functions.
source "${MRB_DIR}/bin/shell_independence.sh"

# Capture the value of $0
set_ dollar_zed="${0}"

# Special tricks to figure out if this script has been sourced.
# Works for bash, tcsh, and in some cases for zsh.
set_ is_sourced=false
ifcsh_
    # Note: It is unfortunate that we must hard-code the name
    #       of this script here, but there is no other way
    #       that works, tcsh is brain-dead.
    set base=`basename "${dollar_zed}"`
    test "${base}" != "setup" && \
        set is_sourced=true
else
    # Special trick for zsh.
    test "${ZSH_NAME}" && test "${dollar_underscore}" = "${dollar_zed}" && \
        is_sourced=true
    # If there were arguments then there is no safe way to find out
    # whether or not the script was sourced in zsh.  Pretend it was.
    test "${ZSH_NAME}" && test "${#argv}" != "0" && \
        is_sourced=true
    # Special trick for bash.
    test "${BASH}" && test "${BASH_SOURCE}" != "${dollar_zed}" && \
        is_sourced=true
# Warning, this must be here because the tcsh parser is brain-dead.
endif
endifcsh_

#
#  End of boilerplate.  Begin of real work.
#

set_ msg1='ERROR: You MUST setup the ups product!'

tnotnull UPS_DIR || ( echo "" ; echo "${msg1}" ; echo "" )
tnotnull UPS_DIR || source "${MRB_DIR}/bin/unset_shell_independence.sh"
tnotnull UPS_DIR || unset me db dollar_underscore dollar_zed is_sourced base msg1 flav
tnotnull UPS_DIR || return

# make sure we know where this script lives
set_ db=

# Allow setting via fw_db from the caller.
tnotnull fw_db && \
    set_ db=`sh -c "cd ${fw_db} > /dev/null 2>&1 && /bin/pwd"`

# If bash, use BASH_SOURCE to find the location of this script.
test -z "${db}" -a "${ss}" = sh && tnotnull BASH_SOURCE && \
    set_ me=`dirname ${BASH_SOURCE}` && \
    set_ db=`sh -c "cd ${me} > /dev/null 2>&1 && /bin/pwd"`

# if tcsh, use dollar_underscore to find the location of this script.
test -z "${db}" -a "${ss}" = csh && \
    set_ me=`dirname ${dollar_underscore[2]}` && \
    set_ db=`/bin/sh -c "cd ${me} > /dev/null 2>&1 && /bin/pwd"`

# if zsh, use trick to find the location of this script.
ifcsh_
else
    test -z "$db" && test "${shell%%*/}" = "zsh" && \
        set_ me=${${(%):-%N}%/*} && \
        set_ db=`sh -c "cd ${me} > /dev/null 2>&1 && /bin/pwd"`
# Warning, this must be here because the tcsh parser is brain-dead.
endif
endifcsh_

test -z "${db}" && echo 'ERROR: Could not determine script location!'
test -z "${db}" && test "${ss}" = "csh" && \
    source "${MRB_DIR}/bin/unset_shell_independence.sh" && \
    unset me db dollar_underscore dollar_zed is_sourced base msg1 flav && \
    exit 1
test -z "${db}" && test "${ss}" =  "sh" && \
    source "${MRB_DIR}/bin/unset_shell_independence.sh" && \
    unset me db dollar_underscore dollar_zed is_sourced base msg1 flav && \
    return 1

set_ flav=`get-directory-name subdir`
set_ buildDirName="build_${flav}"

setenv PRODUCTS "${db}:${PRODUCTS}"

test "$ss" =  sh && test -n "${MRB_BUILDDIR}" && setenv OLD_MRB_BUILDDIR "${MRB_BUILDDIR}"
test "$ss" = csh && tnotnull MRB_BUILDDIR && setenv OLD_MRB_BUILDDIR "${MRB_BUILDDIR}"

tnotnull MRB_DIR || ( echo ""; echo "ERROR: You must first setup mrb!" )
tnotnull MRB_DIR || source "${MRB_DIR}/bin/unset_shell_independence.sh"
tnotnull MRB_DIR || unset me db dollar_underscore dollar_zed is_sourced base msg1 flav
tnotnull MRB_DIR || return 1

# Note: This is done by the small bit added on the end by the newDev.sh script.
#source "${MRB_DIR}/bin/unset_shell_independence.sh"
unset me dollar_underscore dollar_zed is_sourced base msg1 flav
